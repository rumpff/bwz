<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sound = choose(
snd_win1,
snd_win2,
snd_win3,
snd_win4,
snd_win5,
snd_win6,
snd_win7
);

audio_play_sound(sound, 1, 0);

m_selectors[0] = noone;

for (i = 0; i &lt; 4; i++)
{
    m_selectors[i] = instance_create(x, y, obj_playerResults);
    m_selectors[i].m_id = i;
    with(m_selectors[i]) { event_user(0); }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;4; i+=1)
{
    if(gamepad_button_check_pressed(i, gp_start) || keyboard_check_pressed(vk_f1))
    {
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var winner = string(global.playerName[global.winner]);

draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_white);
draw_set_font(fnt_score);
draw_text_outline(room_width/2, room_height/4, "winner is " + winner, 2, c_black, 42);

// get da time
var timeStr, secStr, milStr;

timeStr = string(global.gameTime div 60);
if(string_length(timeStr) &lt; 2) { timeStr = "0" + timeStr; }

secStr = string(floor(global.gameTime) mod 60);
if(string_length(secStr) &lt; 2) { secStr = "0" + secStr; }

milStr = string(floor(frac(global.gameTime) * 100));
if(string_length(milStr) &lt; 2) { milStr = "0" + milStr; }

// Draw time
draw_set_font(fnt_gui);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
draw_text(room_width/2, room_height - 10,
"Game Time: " + timeStr + ":"  + secStr + ":" + milStr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
