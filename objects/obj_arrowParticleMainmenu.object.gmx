<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>msk_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = point_direction(0, 0, m_xSpeed, m_ySpeed);

m_ySpeed += (0.8 * global.timeScale);

x += (m_xSpeed * global.timeScale);
y += (m_ySpeed * global.timeScale);

if(y &gt; room_height)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_xSpeed = random_range(-150, -30);
m_ySpeed = random_range(-10, -5);

if(m_arrowAngle != 11037)
{   
    var angle = point_direction(0, 0, m_xSpeed, m_ySpeed);
    var diff = angle_difference(angle, m_arrowAngle)
    
    var spd = random_range(0, 30);
    var angleNew = random_range((m_arrowAngle*1000) - 30*1000, (m_arrowAngle*1000) + 30*1000);
    angleNew *= 0.001;
    
    if(random(1))
    {
        angleNew += 180;
    }
    
    m_xSpeed = lengthdir_x(spd, angleNew);
    m_ySpeed = lengthdir_y(spd, angleNew) - random_range(0, 10);
}

image_index = random_range(0, image_number-1);
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(obj_mainMenu.surf);

var x2 = x + lengthdir_x(ARROW_LENGTH, image_angle);
var y2 = y + lengthdir_y(ARROW_LENGTH, image_angle);

draw_set_color(c_black);
draw_line_width(x, y, x2, y2, ARROW_WIDTH+2);

draw_set_color(c_white);
draw_line_width(x, y, x2, y2, ARROW_WIDTH);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
