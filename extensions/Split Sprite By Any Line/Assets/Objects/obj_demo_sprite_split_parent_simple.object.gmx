<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up demo
mouse_click = false;
mx = 0;
my = 0;

split_sprite_1 = noone;
split_sprite_2 = noone;

ds_sprites = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up resources
ds_list_destroy(ds_sprites);

if(split_sprite_1 &gt; 0)
    sprite_delete(split_sprite_1);
if(split_sprite_2 &gt; 0)
    sprite_delete(split_sprite_2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse input
if(mouse_check_button_pressed(mb_left)) {
    mouse_click = true;
    mx = mouse_x;
    my = mouse_y;
}
else if(mouse_click) {
    if(mouse_check_button_released(mb_left)) {
        mouse_click = false;
        // Split sprite
        var result = sprite_split(sprite_index, ds_sprites, x, y, mx, my, mouse_x, mouse_y, true, false);
        if(result) {
            // Script was successful
            // Delete existing sprites, if any
            if(split_sprite_1 &gt; 0)
                sprite_delete(split_sprite_1);
            if(split_sprite_2 &gt; 0)
                sprite_delete(split_sprite_2);
            // Get the two sprites from the ds_list we sent through the script
            split_sprite_1 = ds_list_find_value(ds_sprites, 0);
            split_sprite_2 = ds_list_find_value(ds_sprites, 1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw demo
draw_self();

if(split_sprite_1 &gt; 0)
    draw_sprite(split_sprite_1, 0, x + sprite_width + 50, y);
if(split_sprite_2 &gt; 0)
    draw_sprite(split_sprite_2, 0, x + sprite_width * 2 + 100, y);
    
draw_rectangle(x - 5, y - 5, x + sprite_width * 3 + 100 + 5, y + sprite_height + 5, 1);
    
if(mouse_click)
    draw_line(mx, my, mouse_x, mouse_y);
    
/// Label
draw_set_font(font_default_bold);
draw_text(x, y - 30, "This uses the SIMPLE algorithm.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(split_sprite_1 &gt; 0) {
    sprite_delete(split_sprite_1);
    split_sprite_1 = noone;
}
if(split_sprite_2 &gt; 0) {
    sprite_delete(split_sprite_2);
    split_sprite_2 = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
